// Generated by CoffeeScript 1.4.0
(function() {
  var Drowsy,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Drowsy = (function() {

    function Drowsy() {}

    Drowsy.generateMongoObjectId = function() {
      var base, rand, randLength, time;
      base = 16;
      randLength = 13;
      time = Date.now().toString(base);
      rand = Math.ceil(Math.random() * (Math.pow(base, randLength) - 1)).toString(base);
      return time + (Array(randLength + 1).join("0") + rand).slice(-randLength);
    };

    return Drowsy;

  })();

  Drowsy.Model = (function(_super) {
    var initialize, parse;

    __extends(Model, _super);

    function Model() {
      return Model.__super__.constructor.apply(this, arguments);
    }

    Model.prototype.idAttribute = '_id';

    initialize = function() {
      if (!this.get(this.idAttribute)) {
        this.set(this.idAttribute, generateMongoObjectId());
      }
      if (!this.get("created_at")) {
        return this.set("created_at", Date());
      }
    };

    parse = function(data) {
      var parsedCreatedAt;
      data._id = data._id.$oid;
      if (data.created_at) {
        parsedCreatedAt = new Date(data.created_at);
      }
      if (!isNaN(parsedCreatedAt.getTime())) {
        data.created_at = parsedCreatedAt;
      }
      return data;
    };

    return Model;

  })(Backbone.Model);

  Drowsy.Collection = (function(_super) {

    __extends(Collection, _super);

    function Collection() {
      return Collection.__super__.constructor.apply(this, arguments);
    }

    Collection.prototype.model = Drowsy.Model;

    return Collection;

  })(Backbone.Collection);

}).call(this);
